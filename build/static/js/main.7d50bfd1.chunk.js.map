{"version":3,"sources":["bundles/dashboard/reducer/user/index.js","bundles/dashboard/reducer/device/index.js","bundles/auth/authReducer/index.js","bundles/store/rootReducer.js","bundles/store/index.js","bundles/store/createStore.js","bundles/signin/components/SignIn.js","configs/auth-header.js","bundles/auth/index.js","configs/fetcher.js","bundles/common/components/WebLoading/index.js","bundles/signin/components/SigninContainer.js","bundles/signin/index.js","bundles/dashboard/components/navbar/NavBar.js","bundles/dashboard/components/search/SearchInput.js","bundles/dashboard/components/TableWrapper/index.js","bundles/dashboard/actionCreator/user/index.js","bundles/dashboard/fetcher/user/index.js","bundles/dashboard/components/user/shareFunc.js","bundles/dashboard/components/user/UserList/TableUsers.js","bundles/dashboard/components/user/UserList/index.js","bundles/common/shareFunc/index.js","bundles/dashboard/components/user/UserDetail.js","bundles/dashboard/components/user/UserEdit.js","bundles/dashboard/components/user/UserAdd.js","bundles/dashboard/components/device/shareFunc.js","bundles/dashboard/components/device/DeviceListOwner/TableDevices.js","bundles/dashboard/fetcher/device/index.js","bundles/dashboard/components/device/DeviceListOwner/index.js","bundles/dashboard/actionCreator/device/index.js","bundles/dashboard/components/device/DeviceList/TableDevices.js","bundles/dashboard/components/device/DeviceList/index.js","bundles/dashboard/components/device/DeviceDetail.js","bundles/dashboard/components/device/DeviceEdit.js","bundles/dashboard/components/device/DeviceAdd.js","bundles/dashboard/fetcher/statistics/index.js","bundles/dashboard/components/statistics/index.js","bundles/dashboard/route/index.js","bundles/dashboard/index.js","bundles/common/routes/index.js","App.js","serviceWorker.js","index.js"],"names":["reducer","state","userList","action","type","values","deviceList","isLogined","combineReducers","user","device","auth","createStore","Store","instance","rootReducer","getInstance","Signin","onChangePassword","event","setState","password","target","value","onChangeEmail","mobile","onSubmit","this","props","className","preventDefault","required","placeholder","onChange","id","React","PureComponent","authHeader","JSON","parse","localStorage","getItem","token","checkAuthSession","a","requestOptions","method","headers","fetch","then","handleResponseLogined","login","body","stringify","handleResponse","setItem","logout","Axios","get","env","data","catch","err","store","dispatch","response","text","status","WebLoading","isClickToPauseDisabled","height","width","options","autoplay","loop","animationData","loadingAnimate","rendererSettings","preserveAspectRatio","SignInContainer","isLoading","to","SignIn","SigninContainer","connect","Component","style","marginBottom","href","onClick","children","class","marginTop","aria-label","page","onChangePage","bind","shownData","renderList","allData","itemPerPage","length","slice","renderChoosePage","NumberPage","totalPage","Math","round","PreviousPage","NextPage","newPage","defaultProps","n","active","onCick","join","updateUserList","editUser","getState","i","_id","getUserList","handleResponseFetch","getUserByPhone","phone","addUser","handleResponseFetchAddUser","getUserById","deleteUser","stringToDate","dStr","Date","replace","getTime","e","console","error","dateToString","d","date","toXXform","getDate","month","getMonth","getFullYear","fetchUserList","TableWrapper","renderHeader","renderTableBody","renderLoadingOrEmpty","scope","forceLoading","map","index","order","key","name","role","userFetcher","result","ownProp","searchTerm","SearchInput","margin","TableUsers","alertConfirm","message","cbConfirm","window","confirm","initData","reload","log","userFromState","onConfirm","history","go","onDelete","hash","createdDate","expiredDate","storeInfo","hashDecode","addr","ward","district","city","ownProps","users","match","params","UserEdit","expiredStr","createdStr","alert","push","now","deviceIdToString","deviceId","str","forEach","v","toString","toUpperCase","versionToString","ver","TableRow","obj","bikeName","ownerId","deviceType","getDeviceList","getDeviceListbyOwnwerId","handleResponseFetchJson","getDeviceListByDeviceId","editDevice","deleteDevice","json","deviceFetcher","object","colSpan","tabRow","devices","updateDeviceList","fetchDeviceList","trim","split","parseInt","deviceFromState","pairKey","mobileSim","smartKey","typeDevice","Edit","deviceIdStr","stringToDeviceId","owner","firstConnect","licenseTime","manufactureInfo","version","versionStr","firstConnectStr","confirmSubmit","idStr","licenceTimeStr","manufactureId","idInvalid","num","NaN","versionInValid","isNaN","Number","getOverview","totalDevice","totalUser","activedDevice","overview","exact","path","component","Statistics","UserList","UserAdd","UserDetail","DeviceListOwner","DeviceList","DeviceDetail","DeviceAdd","DeviceEdit","Dashboard","NavBar","DashboardRoute","RedirectToSignin","location","pathname","RTSwithRouter","withRouter","RootRouter","render","renderRedirectToSignin","App","document","title","defaults","withCredentials","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d50bfd1.chunk.js","sourcesContent":["/**\r\n * @flow\r\n */\r\nimport { type UserInfo } from \"../../components/types\";\r\nexport type ACTION_TYPES = \"UPDATE_USER_LIST\";\r\n\r\nexport type DEAFAULT_STATE = {\r\n  userList: UserInfo[]\r\n};\r\n\r\nconst reducer = (state: DEAFAULT_STATE = { userList: [] }, action: Object) => {\r\n  let type: ACTION_TYPES = action.type;\r\n  let values = action.values;\r\n  switch (type) {\r\n    case \"UPDATE_USER_LIST\":\r\n      return {\r\n        ...state,\r\n        userList: values\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","/**\r\n * @flow\r\n */\r\nimport { type DeviceInfo } from \"../../components/types\";\r\nexport type ACTION_TYPES = \"UPDATE_DEVICE_LIST\";\r\n\r\nexport type DEAFAULT_STATE = {\r\n  deviceList: DeviceInfo[]\r\n};\r\n\r\nconst reducer = (\r\n  state: DEAFAULT_STATE = { deviceList: [] },\r\n  action: Object\r\n) => {\r\n  let type: ACTION_TYPES = action.type;\r\n  let values = action.values;\r\n  switch (type) {\r\n    case \"UPDATE_DEVICE_LIST\":\r\n      return {\r\n        ...state,\r\n        deviceList: values\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","/**\r\n * @flow\r\n */\r\nexport type ACTION_TYPES = \"UPDATE_AUTH_STATE\";\r\n\r\nexport type DEAFAULT_STATE = {\r\n  isLogined: boolean\r\n};\r\n\r\nconst reducer = (\r\n  state: DEAFAULT_STATE = { isLogined: false },\r\n  action: Object\r\n): DEAFAULT_STATE => {\r\n  let type: ACTION_TYPES = action.type;\r\n  let values = action.values;\r\n  switch (type) {\r\n    case \"UPDATE_AUTH_STATE\":\r\n      return {\r\n        ...state,\r\n        isLogined: values\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","/**\r\n * @flow\r\n */\r\nimport { combineReducers } from \"redux\";\r\nimport user, {\r\n  type DEAFAULT_STATE as STATE_USER\r\n} from \"../dashboard/reducer/user\";\r\nimport device, {\r\n  type DEAFAULT_STATE as STATE_DEVICE\r\n} from \"../dashboard/reducer/device\";\r\nimport auth, { type DEAFAULT_STATE as STATE_AUTH } from \"../auth/authReducer\";\r\n\r\n\r\nexport type STATE_TYPE = {\r\n  user: STATE_USER,\r\n  device: STATE_DEVICE,\r\n  auth: STATE_AUTH,\r\n  // missBike: STATE_MISS_BIKE,\r\n  // bike: STATE_BIKE,\r\n  // missBikeVer2: STATE_MISS_BIKE_VER2\r\n};\r\n\r\nexport default combineReducers({\r\n  // All reducers here\r\n  user,\r\n  device,\r\n  auth\r\n  // missBike,\r\n  // bike,\r\n  // missBikeVer2\r\n});\r\n","/**\r\n * @flow\r\n */\r\nimport createStore from \"./createStore\";\r\nimport { type STATE_TYPE } from \"./rootReducer\";\r\n\r\nexport type { STATE_TYPE };\r\nexport default createStore;\r\n","/**\r\n * @flow\r\n */\r\nimport { createStore } from \"redux\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nimport { type STATE_TYPE } from \"./rootReducer\";\r\n\r\ntype TYPE_STORE = {\r\n  getState(): STATE_TYPE,\r\n  dispatch(value: { type: string, values?: any } | Function): Function\r\n};\r\n\r\nclass Store {\r\n  static instance: TYPE_STORE;\r\n  static getInstance() {\r\n    if (!Store.instance) {\r\n      Store.instance = createStore(\r\n        rootReducer\r\n        // applyMiddleware()\r\n        // thunkMiddleware // lets us dispatch() functions\r\n        // loggerMiddleware // neat middleware that logs actions\r\n      );\r\n    }\r\n    return Store.instance;\r\n  }\r\n}\r\nexport default Store.getInstance();\r\n","/**\r\n * @flow\r\n */\r\nimport React from \"react\";\r\nimport \"./Signin.css\";\r\n\r\ntype Props = { onSubmit: Function };\r\ntype States = { mobile: string, password: string };\r\n\r\nclass Signin extends React.PureComponent<Props, States> {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      mobile: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { onSubmit } = this.props;\r\n    const { mobile, password } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <form\r\n          onSubmit={event => {\r\n            event.preventDefault();\r\n            onSubmit(mobile, password);\r\n          }}\r\n        >\r\n          <div className=\"form-group\">\r\n            <label>Tên tài khoản</label>\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"fangiasavy\"\r\n              value={mobile}\r\n              onChange={this.onChangeEmail}\r\n            />\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n              {}\r\n            </small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Mật khẩu</label>\r\n            <input\r\n              required\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"*******\"\r\n              value={password}\r\n              onChange={this.onChangePassword}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Đăng nhập\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onChangePassword = (event: Object) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  onChangeEmail = (event: Object) => {\r\n    this.setState({ mobile: event.target.value });\r\n  };\r\n}\r\n\r\nexport default Signin;\r\n","export function authHeader() {\r\n    // return authorization header with jwt token\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n    if (user && user.token) {\r\n          return {['x-access-token']: user.token,\r\n                 'Authorization':'Bearer ' +user.token,\r\n                 'Content-Type':'application/json'\r\n                 };\r\n    } else {\r\n        return {};\r\n    }\r\n}","/**\r\n * @flow\r\n */\r\nimport Axios from \"axios\";\r\nimport { SERVER_IP, to } from \"../../configs/fetcher\";\r\nimport store from \"../store\";\r\nimport { authHeader } from '../../configs/auth-header';\r\n\r\nconst checkAuthSession = async () => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: authHeader()\r\n  };\r\n  return fetch(`http://103.137.185.94:3000/user/isLogined`, requestOptions).then(handleResponseLogined);\r\n  // console.log(isLogined);\r\n  // if (isLogined) {\r\n  //   switch (isLogined) {\r\n  //     case 200:\r\n  //       // console.log(isLogined);\r\n  //       store.dispatch({ type: \"UPDATE_AUTH_STATE\", values: true });\r\n  //       return true;\r\n  //     default:\r\n  //       store.dispatch({ type: \"UPDATE_AUTH_STATE\", values: false });\r\n  //       return false;\r\n  //   }\r\n  // } else {\r\n  //   store.dispatch({ type: \"UPDATE_AUTH_STATE\", values: false });\r\n  // }\r\n};\r\n\r\n\r\nconst login = async (mobile: string, password: string) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ mobile, password })\r\n  };\r\n\r\n  //  let login =  fetch(`http://103.137.185.94:3000/users/login`, requestOptions);\r\n  return fetch(`http://103.137.185.94:3000/users/login`, requestOptions)\r\n    .then(handleResponse)\r\n    .then(user => {\r\n      // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      // console.log(user);\r\n      return user;\r\n    });\r\n\r\n};\r\n\r\nconst logout = async () => {\r\n  let logout = await to(Axios.get(`${SERVER_IP}/logout`));\r\n  store.dispatch({ type: \"UPDATE_AUTH_STATE\", values: false });\r\n};\r\nfunction handleResponseLogined(response) {\r\n  return response.text().then(text => {\r\n    const data = text && JSON.parse(text);\r\n    // console.log(data);\r\n      \r\n    if (response.status) {\r\n      // login = login[1];\r\n      switch (response.status) {\r\n        case 200:\r\n          store.dispatch({ type: \"UPDATE_AUTH_STATE\", values: true });\r\n          return data;\r\n\r\n        default:\r\n          store.dispatch({ type: \"UPDATE_AUTH_STATE\", values: false });\r\n          return data;\r\n      }\r\n    } else {\r\n      store.dispatch({ type: \"UPDATE_AUTH_STATE\", values: false });\r\n    }\r\n  });\r\n}\r\n\r\n\r\nfunction handleResponse(response) {\r\n  return response.text().then(text => {\r\n    const data = text && JSON.parse(text);\r\n    if (response.status) {\r\n      // login = login[1];\r\n      switch (response.status) {\r\n        case 200:\r\n          store.dispatch({ type: \"UPDATE_AUTH_STATE\", values: true });\r\n          return data;\r\n\r\n        default:\r\n          store.dispatch({ type: \"UPDATE_AUTH_STATE\", values: false });\r\n          return data;\r\n      }\r\n    } else {\r\n      store.dispatch({ type: \"UPDATE_AUTH_STATE\", values: false });\r\n    }\r\n  });\r\n}\r\n\r\nexport { checkAuthSession, login, logout };\r\n","/**\r\n * @flow\r\n */\r\n\r\nconst env = process.env.NODE_ENV;\r\nexport const SERVER_IP =\r\n  env === \"http://103.137.185.94:3000\";//\"production\" ?  : \"http://localhost:3000\";\r\n\r\n/**\r\n *\r\n * Execute a promise with try catch\r\n */\r\nexport const to = (promise: any) => {\r\n  return promise\r\n    .then(data => {\r\n      return [null, data];\r\n    })\r\n    .catch(err => [err]);\r\n};\r\n","/**\r\n * @flow\r\n */\r\nimport React from \"react\";\r\nimport Lottie from \"react-lottie\";\r\n\r\nimport loadingAnimate from \"./material_loader.json\";\r\n\r\nclass WebLoading extends React.PureComponent<{}> {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Lottie\r\n          isClickToPauseDisabled={true}\r\n          height={100}\r\n          width={100}\r\n          options={{\r\n            autoplay: true,\r\n            loop: true,\r\n            animationData: loadingAnimate,\r\n            rendererSettings: {\r\n              preserveAspectRatio: \"xMidYMid slice\"\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WebLoading;\r\n","/**\r\n * @flow\r\n */\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport SignIn from \"./SignIn\";\r\nimport { login } from \"../../auth/index\";\r\nimport WebLoading from \"../../common/components/WebLoading\";\r\nimport { type STATE_TYPE } from \"../../store/rootReducer\";\r\n\r\ntype States = { isLoading: boolean };\r\ntype Props = {\r\n  isLogined: boolean\r\n};\r\n\r\nclass SignInContainer extends React.PureComponent<Props, States> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = { isLoading: false };\r\n  }\r\n\r\n  render() {\r\n    const { isLogined } = this.props;\r\n    // Force to redirect Dashboard if logined\r\n    if (isLogined) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    // Not login yet\r\n    else {\r\n      const { isLoading } = this.state;\r\n      if (isLoading) {\r\n        return <WebLoading />;\r\n      } else {\r\n        return (\r\n          <SignIn\r\n            onSubmit={(mobile, password) => {\r\n              this.setState({ isLoading: true }, async () => {\r\n                let promise = await login(mobile, password);\r\n                this.setState({ isLoading: false });\r\n              });\r\n            }}\r\n          />\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProp = (state: STATE_TYPE) => {\r\n  return {\r\n    isLogined: state.auth.isLogined\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProp)(SignInContainer);\r\n","/**\r\n * @flow\r\n */\r\nimport SigninContainer from \"./components/SigninContainer\";\r\n\r\nexport default SigninContainer;\r\n","/**\r\n * @flow\r\n */\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logout } from \"../../../auth\";\r\n\r\ntype Props = {};\r\ntype States = {};\r\n\r\nclass Component extends React.PureComponent<Props, States> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav\r\n        className=\"navbar navbar-expand-lg navbar-light bg-light\"\r\n        style={{ marginBottom: 20 }}\r\n      >\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          SMART KEY\r\n        </a>\r\n        <div className=\"navbar-collapse\" id=\"navbarNavDropdown\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item active\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n                Trang chủ <span className=\"sr-only\">(current)</span>\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/device\">\r\n                Thiết bị\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/user\">\r\n                Người dùng\r\n              </a>\r\n            </li>\r\n\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/missbike\">\r\n                Xe thiếu\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/missbikeVer2\">\r\n                Xe thiếu (Ver2)\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/bike\">\r\n                Danh sách xe (Ver2)\r\n              </a>\r\n            </li> */}\r\n            <li className=\"nav-item\">\r\n              <div\r\n                className=\"nav-link\"\r\n                onClick={() => {\r\n                  logout();\r\n                }}\r\n              >\r\n                Đăng xuất\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Component;\r\n","/**\r\n * @flow\r\n */\r\nimport React from \"react\";\r\n\r\ntype Props = { onSubmit: Function, onChange: Function, value: string };\r\ntype States = {};\r\n\r\nclass Component extends React.PureComponent<Props, States> {\r\n  render() {\r\n    const { onChange, value, children, onSubmit } = this.props;\r\n    return (\r\n      <form\r\n        onSubmit={onSubmit}\r\n        class=\"form-inline\"\r\n        style={{ marginTop: 5, marginBottom: 5 }}\r\n      >\r\n        <input\r\n          class=\"form-control mr-sm-2\"\r\n          type=\"search\"\r\n          placeholder=\"Search\"\r\n          aria-label=\"Search\"\r\n          type=\"text\"\r\n          onChange={onChange}\r\n          value={value}\r\n        />\r\n        <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">\r\n          {children}\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Component;\r\n","/**\r\n * @flow\r\n */\r\nimport React from \"react\";\r\n\r\ntype Props = { allData: Object[], renderList: Function };\r\ntype States = { page: number, itemPerPage?: number };\r\n\r\nconst ITEM_PER_PAGE = 15;\r\n\r\nclass Component extends React.PureComponent<Props, States> {\r\n  static defaultProps = { itemPerPage: ITEM_PER_PAGE };\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      page: 1\r\n    };\r\n    this.onChangePage = this.onChangePage.bind(this);\r\n  }\r\n\r\n  render() {\r\n    const { renderList, allData, itemPerPage } = this.props;\r\n    const { page } = this.state;\r\n\r\n    let shownData;\r\n    if (allData.length === 0) {\r\n      shownData = [];\r\n    } else if (allData.length <= itemPerPage) {\r\n      shownData = allData;\r\n    } else {\r\n      shownData = allData.slice((page - 1) * itemPerPage, page * itemPerPage);\r\n    }\r\n    return (\r\n      <div>\r\n        {renderList(shownData, page, itemPerPage)}\r\n        {this.renderChoosePage()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderChoosePage() {\r\n    const { allData, itemPerPage } = this.props;\r\n\r\n    // Không có dữ liệu\r\n    if (allData.length === 0) {\r\n      return NumberPage(1, false);\r\n    }\r\n    // Có dữ liệu\r\n    else {\r\n      const { page } = this.state;\r\n      const totalPage =\r\n        allData.length <= itemPerPage\r\n          ? 1\r\n          : Math.round(allData.length / itemPerPage + 0.5);\r\n      return (\r\n        <ul className=\"pagination justify-content-center\">\r\n          {page - 1 > 0\r\n            ? PreviousPage(page - 1, false, this.onChangePage)\r\n            : null}\r\n          {NumberPage(page, true, this.onChangePage)}\r\n          {page + 1 <= totalPage\r\n            ? NextPage(page + 1, false, this.onChangePage)\r\n            : null}\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n  onChangePage(newPage: number) {\r\n    const { page } = this.state;\r\n    if (page !== newPage) {\r\n      this.setState({ page: newPage });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Component;\r\n\r\n/**\r\n * Render số trang\r\n * @param {*} n\r\n * @param {*} active\r\n * @param {*} onCick\r\n */\r\nconst NumberPage = (\r\n  n: number,\r\n  active: boolean,\r\n  onCick: Function = () => {}\r\n) => {\r\n  const style = [\"page-link\", \"page-item\", active ? \"active\" : \"disabled\"];\r\n\r\n  return (\r\n    <button className={style.join(\" \")} onClick={() => onCick(n)}>\r\n      {n}\r\n    </button>\r\n  );\r\n};\r\nconst NextPage = (n: number, active: boolean, onCick: Function = () => {}) => {\r\n  const style = [\"page-link\", \"page-item\", active ? \"active\" : \"disabled\"];\r\n\r\n  return (\r\n    <button className={style.join(\" \")} onClick={() => onCick(n)}>\r\n      <i class=\"fas fa-chevron-right\" />\r\n    </button>\r\n  );\r\n};\r\n\r\nconst PreviousPage = (\r\n  n: number,\r\n  active: boolean,\r\n  onCick: Function = () => {}\r\n) => {\r\n  const style = [\"page-link\", \"page-item\", active ? \"active\" : \"disabled\"];\r\n\r\n  return (\r\n    <button className={style.join(\" \")} onClick={() => onCick(n)}>\r\n      <i class=\"fas fa-chevron-left\" />\r\n    </button>\r\n  );\r\n};\r\n","/**\r\n * @flow\r\n */\r\n\r\nimport { type UserInfo } from \"../../components/types\";\r\nimport store from \"../../../store\";\r\nimport { type ACTION_TYPES } from \"../../reducer/user\";\r\n\r\nconst updateUserList = (userList: UserInfo[]) => {\r\n  store.dispatch({ type: \"UPDATE_USER_LIST\", values: userList });\r\n};\r\n\r\nconst editUser = (user: UserInfo) => {\r\n  let userList = store.getState().user.userList;\r\n  for (let i in userList) {\r\n    if (user._id === userList[i]._id) {\r\n      userList[i] = user;\r\n      break;\r\n    }\r\n  }\r\n  updateUserList(userList);\r\n};\r\n\r\nexport { updateUserList, editUser };\r\n","/**\r\n * @flow\r\n */\r\nimport { SERVER_IP, to } from \"../../../../configs/fetcher\";\r\nimport Axios from \"axios\";\r\nimport { type UserInfo } from \"../../components/types\";\r\nimport { authHeader } from '../../../../configs/auth-header';\r\nimport bcrypt from \"bcryptjs\";\r\nconst getUserList = async () => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: authHeader()\r\n  };\r\n  return fetch(`http://103.137.185.94:3000/user/getAllUser`, requestOptions).then(handleResponseFetch);\r\n};\r\nconst getUserByPhone = async (phone: string) => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: authHeader()\r\n  };\r\n  return fetch(`http://103.137.185.94:3000/user/getUserByPhone/p${phone}`, requestOptions).then(handleResponseFetch);\r\n};\r\n\r\nconst addUser = async (user: UserInfo) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    body: JSON.stringify({ user }),\r\n    headers: authHeader()\r\n  };\r\n  return fetch(`http://103.137.185.94:3000/user/add`, requestOptions).then(handleResponseFetchAddUser);\r\n};\r\n// const getUserByPhone = async (phone: string) => {\r\n//   return to(Axios.get(`${SERVER_IP}/user/phone/p${phone}`));\r\n// };\r\n// /getUserById/:id\r\nconst getUserById = async (id: string) => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: authHeader()\r\n  };\r\n  return fetch(`http://103.137.185.94:3000/user/getUserById/${id}`, requestOptions).then(handleResponseFetch);\r\n};\r\n\r\nconst editUser = async (user: UserInfo) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    body: JSON.stringify({ user }),\r\n    headers: authHeader()\r\n  };\r\n  return fetch(`http://103.137.185.94:3000/user/edit`, requestOptions).then(handleResponseFetch);\r\n};\r\nconst deleteUser = async (user: UserInfo) => {\r\n  // console.log(user._id);\r\n  const requestOptions = {\r\n    method: 'DELETE',\r\n    headers: authHeader()\r\n  };\r\n  return fetch(`http://103.137.185.94:3000/user/${user._id}`, requestOptions).then(handleResponseFetch);\r\n};\r\n\r\n// const deleteUser = async (user: UserInfo) => {\r\n//   return to(Axios.delete(`${SERVER_IP}/user/delete/${user._id}`));\r\n// };\r\n\r\n// const getUserUsage = async (id: string) => {\r\n//   return to(Axios.get(`${SERVER_IP}/user/usagedata/${id}`));\r\n// };\r\n\r\n// const deactivateYa = async (id: string) => {\r\n//   return to(Axios.post(`${SERVER_IP}/user/deactivateYa`, { userId: id }));\r\n// };\r\nfunction handleResponseFetchAddUser(response) {\r\n  return response.text().then(text => {\r\n    return response.status;\r\n  });\r\n}\r\nfunction handleResponseFetch(response) {\r\n  return response.text().then(text => {\r\n    const data = text && JSON.parse(text);\r\n    return data;\r\n  });\r\n}\r\nexport {\r\n  getUserList,\r\n  getUserById,\r\n  getUserByPhone,\r\n  editUser,\r\n  deleteUser,\r\n  addUser,\r\n  // getUserUsage,\r\n  // activateYa,\r\n  // deactivateYa\r\n};\r\n","/**\r\n * @flow\r\n */\r\n/**\r\n * Chuyển string thành date dạng ms\r\n * Nếu không thành công, trả về null\r\n */\r\nconst stringToDate = (dStr: string) => {\r\n  try {\r\n    // var st = \"26/04/2013\";\r\n    // const dStr = \"26/04/2013\";\r\n    const pattern = /(\\d{2})\\/(\\d{2})\\/(\\d{4})/;\r\n    const dt = new Date(dStr.replace(pattern, \"$3-$2-$1\"));\r\n\r\n    return dt.getTime();\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * Chuyển date dang ms sang string\r\n * @param {*} n\r\n */\r\nconst dateToString = (n: number) => {\r\n  const d = new Date(n);\r\n\r\n  const date = toXXform(d.getDate());\r\n  const month = toXXform(d.getMonth() + 1);\r\n\r\n  return `${date}/${month}/${d.getFullYear()}`;\r\n};\r\n/**\r\n * Chuyển 1 số <100 sang dạng XX\r\n * @param {*} n\r\n */\r\nconst toXXform = (n: number) => {\r\n  return n < 10 ? `0${n}` : n;\r\n};\r\n\r\nexport { dateToString, stringToDate };\r\n","/**\r\n * @flow\r\n */\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport TableWrapper from \"../../TableWrapper\";\r\nimport { type STATE_TYPE } from \"../../../../store\";\r\nimport { updateUserList } from \"../../../actionCreator/user\";\r\nimport { type UserInfo } from \"../../types\";\r\n\r\nimport * as userFetcher from \"../../../fetcher/user\";\r\nimport { dateToString } from \"../shareFunc\";\r\n\r\ntype Props = { userList: UserInfo[], forceLoading: boolean };\r\ntype States = { isLoading: boolean, allData: UserInfo[] };\r\n\r\nclass Component extends React.PureComponent<Props, States> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { isLoading: true, allData: [] };\r\n    this.renderList = this.renderList.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUserList();\r\n  }\r\n\r\n  render() {\r\n    const { userList } = this.props;\r\n    return <TableWrapper allData={userList} renderList={this.renderList} />;\r\n  }\r\n\r\n  renderList(data: UserInfo[], page: number, itemPerPage: number) {\r\n    return (\r\n      <div>\r\n        <table class=\"table\">\r\n          {this.renderHeader()}\r\n          {this.renderTableBody(data, page, itemPerPage)}\r\n        </table>\r\n        {this.renderLoadingOrEmpty(data)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderHeader() {\r\n    return (\r\n      <thead class=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\">STT</th>\r\n          <th scope=\"col\">Name</th>\r\n          <th scope=\"col\">Mobile</th>\r\n          <th scope=\"col\">Role</th>\r\n          <th scope=\"col\"></th>\r\n          {/* <th scope=\"col\">Ngày kích hoạt</th>\r\n          <th scope=\"col\">Honda</th>\r\n          <th scope=\"col\">Yamaha</th> */}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n\r\n  renderTableBody(data: UserInfo[], page: number, itemPerPage: number) {\r\n    const { isLoading } = this.state;\r\n    const { forceLoading } = this.props;\r\n    if (isLoading || forceLoading) {\r\n      return null;\r\n    } else if (!data.length) {\r\n      return null;\r\n    } else {\r\n      return (\r\n        <tbody>\r\n          {/* Header */}\r\n          {/* Body */}\r\n          {data.map((value, index) => {\r\n            let order = index + 1 + (page - 1) * itemPerPage;\r\n            return (\r\n              <tr key={value._id}>\r\n                <td>{order}</td>\r\n                <td>{value.name}</td>\r\n                <td>{value.mobile}</td>\r\n                <td>{value.role}</td>\r\n                {/* <td>{`${value.storeInfo.addr} ,${value.storeInfo.city}`}</td> */}\r\n                <td>\r\n                  <Link\r\n                    className=\"btn btn-sm btn-secondary\"\r\n                    to={`/user/${value._id}`}\r\n                  >\r\n                    Chi tiết\r\n                  </Link>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderLoadingOrEmpty(data: UserInfo[]) {\r\n    const { isLoading } = this.state;\r\n    const { forceLoading } = this.props;\r\n    if (isLoading || forceLoading) {\r\n    } else if (!data.length) {\r\n      return <div>Không có dữ liệu</div>;\r\n    }\r\n  }\r\n\r\n  async fetchUserList() {\r\n    this.setState({ isLoading: true });\r\n\r\n    const result = await userFetcher.getUserList();\r\n    const allData = result;\r\n\r\n    this.setState({ isLoading: false });\r\n    updateUserList(allData.data);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: STATE_TYPE, ownProp) => {\r\n  return {\r\n    userList: state.user.userList\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Component);\r\n","/**\r\n * @flow\r\n */\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchInput from \"../../search/SearchInput\";\r\nimport TableUsers from \"../UserList/TableUsers\";\r\nimport { updateUserList } from \"../../../actionCreator/user\";\r\nimport * as userFetcher from \"../../../fetcher/user\";\r\n\r\ntype Props = {};\r\ntype States = { searchTerm: string, isLoading: boolean };\r\n\r\nclass Component extends React.PureComponent<Props, States> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { searchTerm: \"\", isLoading: false };\r\n  }\r\n\r\n  render() {\r\n    const { searchTerm, isLoading } = this.state;\r\n    return (\r\n      <div style={{}}>\r\n        <div className=\"row\">\r\n          <SearchInput\r\n            onChange={this.onChange}\r\n            onSubmit={this.onSubmit}\r\n            value={searchTerm}\r\n          >\r\n            Tìm kiếm\r\n          </SearchInput>\r\n          <Link\r\n            className=\"btn btn-sm btn-primary\"\r\n            to={\"/user/add/\"}\r\n            style={{ margin: 5 }}\r\n          >\r\n            Thêm\r\n          </Link>\r\n        </div>\r\n        <TableUsers forceLoading={isLoading} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onChange = (event: any) => {\r\n    this.setState({ searchTerm: event.target.value });\r\n  };\r\n\r\n  onSubmit = async (event: any) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    this.setState({ isLoading: true });\r\n\r\n    const result = await userFetcher.getUserByPhone(searchTerm);\r\n    const allData = result;\r\n    \r\n    this.setState({ isLoading: false });\r\n    updateUserList(allData.data ? allData.data : []);\r\n  };\r\n}\r\n\r\nexport default Component;\r\n","/**\r\n * @flow\r\n */\r\n\r\n/**\r\n * Delay ms\r\n * @param {*} ms\r\n */\r\nconst wait = async (ms: number = 0) => {\r\n  return new Promise(r => setTimeout(r, ms));\r\n};\r\n\r\nconst alertConfirm = (\r\n  message: string = \"You're going to do something?\",\r\n  cbConfirm: Function = () => {}\r\n) => {\r\n  window.confirm(message) && cbConfirm();\r\n};\r\n\r\nexport { wait, alertConfirm };\r\n","/**\r\n * @flow\r\n */\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { type STATE_TYPE } from \"../../../store\";\r\nimport { type UserInfo } from \"../types\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport { dateToString } from \"./shareFunc\";\r\nimport * as userFetcher from \"../../fetcher/user\";\r\nimport { alertConfirm } from \"../../../common/shareFunc\";\r\nimport WebLoading from \"../../../common/components/WebLoading\";\r\n\r\ntype Props = { user: UserInfo, id: string };\r\ntype States = {\r\n  isLoading: boolean,\r\n  userFromState: UserInfo | null,\r\n};\r\n\r\nclass Component extends React.PureComponent<Props, States> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.onDelete = this.onDelete.bind(this);\r\n    this.state = {\r\n      isLoading: true,\r\n      userFromState: null,\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.initData();\r\n  }\r\n\r\n  initData = async (reload: boolean) => {\r\n    const { user,id } = this.props;\r\n    if (reload || !user) {\r\n    const result = await userFetcher.getUserById(id);\r\n    const allData = result;\r\n    console.log(allData.data);\r\n      this.setState({\r\n        isLoading: false,\r\n        userFromState: allData.data,\r\n      });\r\n    } else {\r\n       this.setState({ isLoading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n     const { isLoading } = this.state;\r\n    if (isLoading) {\r\n      return <WebLoading />;\r\n    }\r\n\r\n    let { user } = this.props;\r\n    const { userFromState } = this.state;\r\n    if (!user) {\r\n      const { userFromState } = this.state;\r\n      user = userFromState;\r\n    }\r\n    // const ownerId = \"5e50e424aefeb266f1f3241a\";\r\n    if (user) {\r\n      const {\r\n        name,\r\n        mobile,\r\n        hash,\r\n        _id,\r\n        role,\r\n        createdDate,\r\n        expiredDate,\r\n        storeInfo,\r\n        hashDecode,\r\n      } = user;\r\n      const { addr, ward, district, city } = storeInfo;\r\n      // Có thông tin -> Hiển thị\r\n      return (\r\n        <div>\r\n          {/* Thanh công cụ */}\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <Link to=\"/user\" className=\"btn btn-link mb-2\">\r\n                <i className=\"fas fa-arrow-circle-left\" /> Quay về\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"btn-group float-right\">\r\n                <Link to={`/user/${user._id}/edit`} className=\"btn btn-warning\">\r\n                  Edit\r\n                </Link>\r\n                <button className=\"btn btn-danger\" onClick={this.onDelete}>\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Thông tin người dùng */}\r\n          <div className=\"card\">\r\n            {/* Số điện thoại */}\r\n            <h4 className=\"card-header\">Phone: {mobile}</h4>\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  _id: <h6 className=\"text\">{_id}</h6>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n              Mật khẩu: <h6 className=\"text-danger\">{hashDecode}</h6>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  Name:{\" \"}\r\n                  <h6 className=\"text-danger\">{name}</h6>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  Quyền truy cập:{\" \"}\r\n                  <h6 className=\"text-danger\">\r\n                    {role}\r\n                  </h6>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  Created Date:{\" \"}\r\n                  <h6 className=\"text-success\">{dateToString(createdDate)}</h6>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  Expired Date:{\" \"}\r\n                  <h6 className=\"text-danger\">{dateToString(expiredDate)}</h6>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <h5 className=\"mb-4\">Thông tin cửa hàng</h5>\r\n              <ul className=\"list-group\">\r\n              <li className=\"list-group-item\">Tên: {name}</li>\r\n                <li className=\"list-group-item\">Địa chỉ: {addr}</li>\r\n                <li className=\"list-group-item\">Phường (xã): {ward}</li>\r\n                <li className=\"list-group-item\">Quận (huyện): {district}</li>\r\n                <li className=\"list-group-item\">Thành phố (tỉnh): {city}</li>\r\n              </ul>\r\n            </div>\r\n            <Link to={`/device/owner/${_id}`} className=\"btn btn-link mb-2\">\r\n                <i className=\"fas fa-mobile\" /> Xem Device\r\n              </Link>\r\n          </div>\r\n          {/* Dữ liệu sử dụng */}\r\n          <hr />\r\n        </div>\r\n      );\r\n    }\r\n    // Không có thông tin\r\n    else {\r\n      return <div>Không có thông tin</div>;\r\n    }\r\n  }\r\n\r\n  onDelete() {\r\n    alertConfirm(\"Xác nhận xoá\", this.onConfirm);\r\n  }\r\n\r\n\r\n  onConfirm = async () => {\r\n    const { user } = this.props;\r\n    await userFetcher.deleteUser(user);\r\n     this.props.history.go(-1);\r\n  };\r\n}\r\nconst mapStateToProps = (state: STATE_TYPE, ownProps: Object) => {\r\n  const users = state.user.userList;\r\n  const id = ownProps.match.params.id;\r\n\r\n  for (let index in users) {\r\n    if (users[index]._id === id) {\r\n      return { user: users[index] };\r\n    }\r\n  }\r\n  return {id: id };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Component);\r\n\r\nconst getDateStrOfWeek = (w, y) => {\r\n  var d = 1 + (w - 1) * 7; // 1st of January + 7 days for each week\r\n\r\n  return new Date(y, 0, d);\r\n};\r\n","/**\r\n * @flow\r\n */\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { STATE_TYPE } from \"../../../store\";\r\nimport { type UserInfo } from \"../types\";\r\n\r\nimport { dateToString, stringToDate } from \"./shareFunc\";\r\nimport { editUser } from \"../../actionCreator/user\";\r\nimport * as userFetcher from \"../../fetcher/user\";\r\nimport { alertConfirm } from \"../../../common/shareFunc\";\r\n\r\ntype Props = { user: UserInfo, history: any };\r\ntype States = {\r\n  _id: string,\r\n  name:string,\r\n  mobile: string,\r\n  hash:string,\r\n  expiredStr: string,\r\n  createdStr: string,\r\n  role:string,\r\n  addr:String,\r\n  ward: string,\r\n  district: string,\r\n  city: string,\r\n  hashDecode:string,\r\n  isLoading: boolean\r\n};\r\n\r\nclass UserEdit extends React.PureComponent<Props, States> {\r\n  constructor(props) {\r\n    super(props);\r\n    let { user } = this.props;\r\n\r\n    this.state = {\r\n      _id: user._id,\r\n      name: user.name?user.name:\"\",\r\n      mobile: user.mobile ? user.mobile : \"\",\r\n      password: user.password?user.password:\"\",\r\n      role:user.role?user.role:\"\",\r\n      expiredStr: dateToString(user.expiredDate),\r\n      createdStr: dateToString(user.createdDate),\r\n      addr: user.storeInfo.addr ? user.storeInfo.addr : \"\",\r\n      ward: user.storeInfo.ward ? user.storeInfo.ward : \"\",\r\n      district: user.storeInfo.district ? user.storeInfo.district : \"\",\r\n      city: user.storeInfo.city ? user.storeInfo.city : \"\",\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    alertConfirm(\"Xác nhận thay đổi thông tin\", this.onConfirm);\r\n  };\r\n\r\n  onConfirm = () => {\r\n    const {\r\n        _id,\r\n        mobile,\r\n        name,\r\n        role,\r\n        hash,\r\n        hashDecode,\r\n        expiredStr,\r\n        createdStr,\r\n        password,\r\n        addr,\r\n        ward,\r\n        district,\r\n        city\r\n    } = this.state;\r\n\r\n    \r\n    const expiredDate = stringToDate(expiredStr);\r\n    if (!expiredDate) {\r\n      alert(\"Định dạng ngày hết hạn không hợp lệ\");\r\n      // let date = new Date.now();\r\n      // date.setDate(date + 720);\r\n      // console.log(createdDate + 720);\r\n      // return;\r\n    }\r\n    const createdDate = stringToDate(createdStr);\r\n    if (!createdDate) {\r\n      alert(\"Định dạng ngày tạo tài khoản không hợp lệ\");\r\n      return;\r\n    }\r\n\r\n    let user = {\r\n      _id: _id,\r\n      name:name,\r\n      mobile: mobile,\r\n      role:role,\r\n      hash:hash,\r\n      hashDecode:hashDecode,\r\n      password: password,\r\n      expiredDate: expiredDate,\r\n      createdDate: createdDate,\r\n      storeInfo: {\r\n        addr:addr,\r\n        ward: ward,\r\n        district: district,\r\n        city: city\r\n      }\r\n    };\r\n    // Push to Server\r\n    this.setState({ isLoading: true }, async () => {\r\n     console.log(user);\r\n     const result = await userFetcher.editUser(user);\r\n\r\n      editUser(user);\r\n      // FIXME: UserList load lại users từ server r đẩy vào redux\r\n      this.props.history.push(\"/user\");\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      _id,\r\n      name,\r\n      mobile,\r\n      password,\r\n      expiredStr,\r\n      createdStr,\r\n      hash,\r\n      role,\r\n       addr,\r\n       ward,\r\n       district,\r\n       city\r\n    } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <Link to={`/user/${_id}`} className=\"btn btn-link mb-2\">\r\n              <i className=\"fas fa-arrow-circle-left\" /> Quay về\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">Sửa thông tin</div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmit}>\r\n              <div className=\"form-group\">\r\n                <div className=\"card-title\">Điện thoại</div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"mobile\"\r\n                  required\r\n                  onChange={this.onChange}\r\n                  value={mobile}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"card-title\">Name</div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"name\"\r\n                  required\r\n                  onChange={this.onChange}\r\n                  value={name}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"card-title\">Password</div>\r\n                <input\r\n                  placeholder = \"Điền mật khẩu mới gồm 8 chữ số\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"password\"\r\n                  required\r\n                  onChange={this.onChange}\r\n                  value={password}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"card-title\">Ngày hết hạn</div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"expiredStr\"\r\n                  required\r\n                  onChange={this.onChange}\r\n                  value={expiredStr}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"card-title\">Ngày tạo</div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"createdStr\"\r\n                  required\r\n                  onChange={this.onChange}\r\n                  value={createdStr}\r\n                />\r\n              </div>\r\n              <hr />\r\n              {/*  */}\r\n              <h5 className=\"mb-4\">Thông tin thêm</h5>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-2\">\r\n                  <div className=\"card-title\">Role</div>\r\n                </div>\r\n                <div className=\"form-group col-md-10\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"role\"\r\n                    required\r\n                    onChange={this.onChange}\r\n                    value={role}\r\n                  />\r\n                </div>\r\n              </div>\r\n              {/*  */}\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-2\">\r\n                  <div className=\"card-title\">Địa chỉ</div>\r\n                </div>\r\n                <div className=\"form-group col-md-10\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"addr\"\r\n                    required\r\n                    onChange={this.onChange}\r\n                    value={addr}\r\n                  />\r\n                </div>\r\n              </div>\r\n              {/*  */}\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-2\">\r\n                  <div className=\"card-title\">Phường (xã)</div>\r\n                </div>\r\n                <div className=\"form-group col-md-10\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"ward\"\r\n                    required\r\n                    onChange={this.onChange}\r\n                    value={ward}\r\n                  />\r\n                </div>\r\n              </div>\r\n              {/*  */}\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-2\">\r\n                  <div className=\"card-title\">Quận (huyện)</div>\r\n                </div>\r\n                <div className=\"form-group col-md-10\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"district\"\r\n                    required\r\n                    onChange={this.onChange}\r\n                    value={district}\r\n                  />\r\n                </div>\r\n              </div>\r\n              {/*  */}\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-2\">\r\n                  <div className=\"card-title\">Thành phố (tỉnh)</div>\r\n                </div>\r\n                <div className=\"form-group col-md-10\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"city\"\r\n                    required\r\n                    onChange={this.onChange}\r\n                    value={city}\r\n                  />\r\n                </div>\r\n               </div>\r\n              {/*  */}\r\n              <button className=\"btn btn-block btn-info\">Submit</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state: STATE_TYPE, ownProps) {\r\n  let users = state.user.userList;\r\n  let user;\r\n  for (let index in users) {\r\n    if (users[index]._id == ownProps.match.params.id) {\r\n      user = users[index];\r\n      break;\r\n    }\r\n  }\r\n  return { user };\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserEdit);\r\n","/**\r\n * @flow\r\n */\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { type UserInfo } from \"../types\";\r\n\r\nimport { dateToString, stringToDate } from \"./shareFunc\";\r\nimport * as userFetcher from \"../../fetcher/user\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\ntype Props = { history: any };\r\ntype States = {\r\n  name:string,\r\n  mobile: string,\r\n  role: string,\r\n  password: String,\r\n  expiredStr: string,\r\n  createdStr: string,\r\n  addr: string,\r\n  ward: string,\r\n  district: string,\r\n  city: string,\r\n  isLoading: boolean\r\n};\r\n\r\nclass Component extends React.PureComponent<Props, States> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    // _id: string,\r\n    // mobile: string,\r\n    // role: string,\r\n    // hash:String,\r\n    // id:String,\r\n    this.state = {\r\n      name:\"\",\r\n      mobile: \"\",\r\n      role: \"Role.User\",\r\n      password: \"\",\r\n      expiredStr: dateToString(Date.now()),\r\n      createdStr: dateToString(Date.now()),\r\n      addr: \"\",\r\n      ward: \"\",\r\n      district: \"\",\r\n      city: \"\",\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  onSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    const {\r\n      name,\r\n      mobile,\r\n      role,\r\n      password,\r\n      expiredStr,\r\n      createdStr,\r\n      addr,\r\n      ward,\r\n      district,\r\n      city\r\n      // id\r\n    } = this.state;\r\n\r\n    let user = {\r\n      name:name,\r\n      mobile:mobile,\r\n      role:role,\r\n      password:password,\r\n      // id:id\r\n      storeInfo: {\r\n        addr: addr,\r\n        ward: ward,\r\n        district: district,\r\n        city: city\r\n      }\r\n    };\r\n    // Push to Server\r\n    this.setState({ isLoading: true }, async () => {\r\n      const result = await userFetcher.addUser(user);\r\n     if (result != 200)\r\n     {\r\n      alert(\"Đã tồn tại user hoặc xảy ra lỗi! Vui lòng thử lại!\");\r\n     }\r\n     else\r\n     {\r\n        this.props.history.push(\"/user\");\r\n      }     \r\n    });\r\n  };\r\n\r\n  onChange = (e: any) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      mobile,\r\n      role,\r\n      password,\r\n      expiredStr,\r\n      createdStr,\r\n      addr,\r\n      ward,\r\n      district,\r\n      city\r\n      // id\r\n    } = this.state;\r\n   \r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <Link to=\"/user\" className=\"btn btn-link mb-2\">\r\n              <i className=\"fas fa-arrow-circle-left\" /> Quay lại\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">Thêm người dùng</div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmit}>\r\n              <div className=\"form-group\">\r\n                <div className=\"card-title\">Số điện thoại</div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"mobile\"\r\n                  required\r\n                  onChange={this.onChange}\r\n                  value={mobile}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"card-title\">Mật khẩu</div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"password\"\r\n                  required\r\n                  onChange={this.onChange}\r\n                  value={password}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"card-title\">Role User</div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"role\"\r\n                  required\r\n                  onChange={this.onChange}\r\n                  value={role}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"card-title\">Tên người dùng</div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"name\"\r\n                  required\r\n                  onChange={this.onChange}\r\n                  value={name}\r\n                />\r\n              </div>\r\n              <hr />\r\n         {/*  */}\r\n         <h5 className=\"mb-4\">Thông tin cửa hàng</h5>\r\n              {/* <div className=\"form-row\">\r\n                <div className=\"form-group col-md-2\">\r\n                  <div className=\"card-title\">Tên</div>\r\n                </div>\r\n                <div className=\"form-group col-md-10\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"name\"\r\n                    required\r\n                    onChange={this.onChange}\r\n                    value={name}\r\n                  />\r\n                </div>\r\n              </div> */}\r\n              {/*  */}\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-2\">\r\n                  <div className=\"card-title\">Địa chỉ</div>\r\n                </div>\r\n                <div className=\"form-group col-md-10\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"addr\"\r\n                    required\r\n                    onChange={this.onChange}\r\n                    value={addr}\r\n                  />\r\n                </div>\r\n              </div>\r\n              {/*  */}\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-2\">\r\n                  <div className=\"card-title\">Phường (xã)</div>\r\n                </div>\r\n                <div className=\"form-group col-md-10\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"ward\"\r\n                    required\r\n                    onChange={this.onChange}\r\n                    value={ward}\r\n                  />\r\n                </div>\r\n              </div>\r\n              {/*  */}\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-2\">\r\n                  <div className=\"card-title\">Quận (huyện)</div>\r\n                </div>\r\n                <div className=\"form-group col-md-10\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"district\"\r\n                    required\r\n                    onChange={this.onChange}\r\n                    value={district}\r\n                  />\r\n                </div>\r\n              </div>\r\n              {/*  */}\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-2\">\r\n                  <div className=\"card-title\">Thành phố (tỉnh)</div>\r\n                </div>\r\n                <div className=\"form-group col-md-10\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"city\"\r\n                    required\r\n                    onChange={this.onChange}\r\n                    value={city}\r\n                  />\r\n                </div>\r\n              </div>\r\n              {/*  */}\r\n              <button className=\"btn btn-block btn-info\">Submit</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Component;\r\n","/**\r\n * @flow\r\n */\r\n/**\r\n * Chuyển string thành date dạng ms\r\n * Nếu không thành công, trả về null\r\n */\r\nconst stringToDate = (dStr: string) => {\r\n  try {\r\n    // var st = \"26/04/2013\";\r\n    // const dStr = \"26/04/2013\";\r\n    const pattern = /(\\d{2})\\/(\\d{2})\\/(\\d{4})/;\r\n    const dt = new Date(dStr.replace(pattern, \"$3-$2-$1\"));\r\n\r\n    return dt.getTime();\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n};\r\n\r\n/**\r\n * Chuyển date dang ms sang string\r\n * @param {*} n\r\n */\r\nconst dateToString = (n: number) => {\r\n  const d = new Date(n);\r\n\r\n  const date = toXXform(d.getDate());\r\n  const month = toXXform(d.getMonth() + 1);\r\n\r\n  return `${date}/${month}/${d.getFullYear()}`;\r\n};\r\n/**\r\n * Chuyển 1 số <100 sang dạng XX\r\n * @param {*} n\r\n */\r\nconst toXXform = (n: number) => {\r\n  return n < 10 ? `0${n}` : n;\r\n};\r\n\r\nconst deviceIdToString = (deviceId: number[]) => {\r\n  let str = \"\";\r\n  deviceId.forEach((v, i) => {\r\n    if (i > 0) {\r\n      str += \"-\";\r\n    }\r\n    if (v < 16) {\r\n      str += `0${v.toString(16).toUpperCase()}`;\r\n    } else {\r\n      str += `${v.toString(16).toUpperCase()}`;\r\n    }\r\n  });\r\n  return str;\r\n};\r\nconst typeDevice = (deviceType: Number) => {\r\n  let str =\"\"\r\n  if (deviceType == 1)\r\n  {\r\n    str = \"Sim\";\r\n  }\r\n  if (deviceType == 1)\r\n  {\r\n    str = \"noSim\";\r\n  }\r\n  return str;\r\n}\r\nconst stringToDeviceId = (str: string) => {\r\n  let deviceId = str.split(\"-\");\r\n  for (let i in deviceId) {\r\n    // Chỉ gồm ký tự số\r\n    try {\r\n      deviceId[i] = parseInt(`0x${deviceId[i]}`);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n    // Kiểm tra độ lớn\r\n    if (deviceId[i] > 255) {\r\n      return false;\r\n    }\r\n  }\r\n  return deviceId;\r\n};\r\n\r\nconst convertHash = (str: string) => {\r\n  var hash = 0, i, chr;\r\n  if (this.length === 0) return hash;\r\n  for (i = 0; i < this.length; i++) {\r\n    chr   = this.charCodeAt(i);\r\n    hash  = ((hash << 5) - hash) + chr;\r\n    hash |= 0; // Convert to 32bit integer\r\n  }\r\n  return hash;\r\n};\r\n\r\nconst versionToString = (ver: number[]) => {\r\n  let str = \"\";\r\n  ver.forEach((v, i) => {\r\n    if (i > 0) {\r\n      str += \".\";\r\n    }\r\n    str += v;\r\n  });\r\n  return str;\r\n};\r\n\r\nconst stringToVersion = (str: string) => {\r\n  let version = str.split(\".\");\r\n  for (let i in version) {\r\n    // Chỉ gồm ký tự số\r\n    if (/\\d/.test(version[i])) {\r\n      version[i] = parseInt(version[i]);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  return version;\r\n};\r\n\r\nexport {\r\n  dateToString,\r\n  stringToDate,\r\n  deviceIdToString,\r\n  stringToDeviceId,\r\n  versionToString,\r\n  stringToVersion,\r\n  typeDevice\r\n};\r\n","// TableRow.js\r\n\r\nimport React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { dateToString, deviceIdToString, versionToString } from \"../shareFunc\";\r\nclass TableRow extends Component {\r\n  render() {\r\n    return (\r\n      <tr>\r\n        <td>\r\n          {this.props.obj.bikeName}\r\n        </td>\r\n        <td>\r\n          {deviceIdToString(this.props.obj.deviceId)}\r\n        </td>\r\n        <td>\r\n          {this.props.obj.ownerId}\r\n        </td>\r\n        <td>\r\n          {this.props.obj.deviceType}\r\n        </td>\r\n        <td>\r\n          <Link\r\n            className=\"btn btn-sm btn-info\"\r\n            to={`/device/${this.props.obj.ownerId}`}\r\n          >\r\n            Chi tiết\r\n                  </Link>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableRow;","/**\r\n * @flow\r\n */\r\nimport { SERVER_IP, to } from \"../../../../configs/fetcher\";\r\nimport Axios from \"axios\";\r\nimport { type DeviceInfo } from \"../../components/types\";\r\nimport { authHeader } from '../../../../configs/auth-header';\r\n\r\nconst getDeviceList = async () => {\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: authHeader()\r\n  };\r\n  return fetch(`http://103.137.185.94:3000/device/DeviceList`, requestOptions).then(handleResponseFetch);\r\n};\r\nconst getDeviceListbyOwnwerId = async (ownerId: string) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    body: JSON.stringify({ ownerId }),\r\n    headers: authHeader()\r\n  };\r\n  return fetch(`http://103.137.185.94:3000/device/getDeviceByOwner`, requestOptions).then(handleResponseFetchJson);\r\n}\r\n\r\nconst getDeviceListByDeviceId = async (deviceId: number[]) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    body: JSON.stringify({ deviceId }),\r\n    headers: authHeader()\r\n  };\r\n  return fetch(`http://103.137.185.94:3000/device/getDeviceListByDeviceId`, requestOptions).then(handleResponseFetchJson);\r\n};\r\n\r\nconst editDevice = async (device: DeviceInfo) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: authHeader()\r\n  };\r\n  return fetch(`http://103.137.185.94:3000/device/edit`, requestOptions).then(handleResponseFetch);\r\n};\r\n\r\nconst addDevice = async (device: DeviceInfo) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: authHeader()\r\n  };\r\n  return fetch(`http://103.137.185.94:3000/device/add`, requestOptions).then(handleResponseFetch);\r\n};\r\n\r\nconst deleteDevice = async (device: DeviceInfo) => {\r\n  const requestOptions = {\r\n    method: 'DELETE',\r\n    headers: authHeader()\r\n  };\r\n  // return to(Axios.delete(`${SERVER_IP}/device/delete/${device._id}`));\r\n  return fetch(`http://103.137.185.94:3000/device/${device._id}`, requestOptions).then(handleResponseFetch);\r\n};\r\n\r\nfunction handleResponseFetch(response) {\r\n  return response.text().then(text => {\r\n    const data = text && JSON.parse(text);\r\n    return data;\r\n  });\r\n};\r\n\r\nfunction handleResponseFetchJson(response) {\r\n  return response.json().then(data => {\r\n    return data;\r\n  });\r\n};\r\n\r\n// function handleDeviceListByDeviceId(response) {\r\n//   return response.json().then(json => {\r\n//     console.log(json);\r\n//     return json;\r\n//   });\r\n// };\r\n\r\n// function handleResponseFetch(response) {\r\n//   return response.text().then(text => {\r\n//       const data = text && JSON.parse(text);\r\n//       return data;\r\n//   });\r\n// };\r\n\r\n// const editDevice = async (device: DeviceInfo) => {\r\n//   return to(Axios.post(`http://103.137.185.94:3000/device/edit`, { device: device }));\r\n// };\r\n\r\n\r\n\r\nexport {\r\n  getDeviceList,\r\n  getDeviceListByDeviceId,\r\n  editDevice,\r\n  deleteDevice,\r\n  addDevice,\r\n  getDeviceListbyOwnwerId\r\n  // addManyDevice\r\n};\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport TableRow from './TableDevices';\r\nimport { Link } from \"react-router-dom\";\r\nimport * as deviceFetcher from \"../../../fetcher/device\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Component extends React.PureComponent<Props, States> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { device: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initData();\r\n    }\r\n    initData = async (reload: boolean) => {\r\n        const { device, id } = this.props;\r\n        if (reload || !device) {\r\n            const result = await deviceFetcher.getDeviceListbyOwnwerId(id);\r\n            const allData = result;\r\n            console.log(allData);\r\n            this.setState({\r\n                isLoading: false,\r\n            });\r\n            this.setState({ device: allData });\r\n        } else {\r\n            this.setState({ isLoading: false });\r\n        }\r\n    };\r\n\r\n    tabRow() {\r\n        return this.state.device.map(function (object, i) {\r\n            return <TableRow obj={object} key={i} />;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <Link to={`/user`} className=\"btn btn-link mb-2\">\r\n                            <i className=\"fas fa-arrow-circle-left\" /> Quay về\r\n              </Link>\r\n                    </div>\r\n                </div>\r\n                <h6>Danh sách thiết bị </h6>\r\n                <table className=\"table\" style={{ marginTop: 5 }}>\r\n                    <thead class=\"thead-dark\">\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>DeviceId</th>\r\n                            <th>OwnerId</th>\r\n                            <th>deviceType</th>\r\n                            <th colSpan=\"2\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.tabRow()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state: STATE_TYPE, ownProps: Object) => {\r\n    const devices = state.device.deviceList;\r\n    const id = ownProps.match.params.id;\r\n\r\n    for (let index in devices) {\r\n        if (devices[index]._id === id) {\r\n            return { device: devices[index] };\r\n        }\r\n    }\r\n    return { id: id };\r\n};\r\nexport default connect(mapStateToProps)(Component);  ","/**\r\n * @flow\r\n */\r\nimport { type DeviceInfo } from \"../../components/types\";\r\nimport store from \"../../../store\";\r\nimport { type ACTION_TYPES } from \"../../reducer/device\";\r\n\r\nconst updateDeviceList = (userList: DeviceInfo[]) => {\r\n  // console.log(userList);\r\n  store.dispatch({ type: \"UPDATE_DEVICE_LIST\", values: userList });\r\n};\r\n\r\nconst editDevice = (device: DeviceInfo) => {\r\n  let deviceList = store.getState().device.deviceList;\r\n\r\n  for (let i in deviceList) {\r\n    console.log(deviceList[i]);\r\n    if (device._id === device[i]._id) {\r\n      deviceList[i] = device;\r\n      break;\r\n    }\r\n  }\r\n  updateDeviceList(deviceList);\r\n};\r\n\r\nexport { updateDeviceList, editDevice };\r\n","/**\r\n * @flow\r\n */\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport TableWrapper from \"../../TableWrapper\";\r\nimport { type STATE_TYPE } from \"../../../../store\";\r\nimport { updateDeviceList } from \"../../../actionCreator/device\";\r\nimport { type DeviceInfo } from \"../../types\";\r\nimport * as deviceFetcher from \"../../../fetcher/device\";\r\nimport { dateToString, deviceIdToString, versionToString } from \"../shareFunc\";\r\ntype Props = { deviceList: DeviceInfo[] };\r\ntype States = { isLoading: boolean, allData: DeviceInfo[] };\r\n\r\nclass Component extends React.PureComponent<Props, States> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { isLoading: true, allData: [] };\r\n    this.renderList = this.renderList.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchDeviceList();\r\n  }\r\n\r\n  render() {\r\n    const { deviceList } = this.props;\r\n    return <TableWrapper allData={deviceList} renderList={this.renderList} />;\r\n  }\r\n\r\n  renderList(data: DeviceInfo[], page: number, itemPerPage: number) {\r\n    return (\r\n      <div>\r\n        <table class=\"table\">\r\n          {this.renderHeader()}\r\n          {this.renderTableBody(data, page, itemPerPage)}\r\n        </table>\r\n        {this.renderLoadingOrEmpty(data)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // deviceId: number[],\r\n  // pairKey: number[],\r\n  // ownerId: string,\r\n  // mobileSim: String;\r\n  // bikeName: String;\r\n  // smartKey: String;\r\n  // deviceType: Number\r\n  renderHeader() {\r\n    return (\r\n      <thead className=\"thead-dark\">\r\n        <tr>\r\n          <th>STT</th>\r\n          <th>Device Id</th>\r\n          <th>Name</th>\r\n          <th>ownerId</th>\r\n          {/* <th>pairKey</th> */}\r\n          {/* <th>smartKey</th> */}\r\n          <th>deviceType</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n\r\n  renderTableBody(data: DeviceInfo[], page: number, itemPerPage: number) {\r\n    if (this.state.isLoading) {\r\n      return null;\r\n    } else if (!data.length) {\r\n      return null;\r\n    } else {\r\n      return (\r\n        <tbody>\r\n          {/* Header */}\r\n          {/* Body */}\r\n          {data.map((value, index) => {\r\n            let order = index + 1 + (page - 1) * itemPerPage;\r\n            return (\r\n              <tr key={value._id}>\r\n                <td>{order}</td>\r\n                <td>{deviceIdToString(value.deviceId)}</td>\r\n                <td>{value.bikeName}</td>\r\n                <td>{(value.ownerId)}</td>\r\n                <td>{(value.deviceType)}</td>\r\n                <td>\r\n                  <Link\r\n                    className=\"btn btn-sm btn-secondary\"\r\n                    to={`/device/${value._id}`}\r\n                  >\r\n                    Chi tiết\r\n                  </Link>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderLoadingOrEmpty(data: DeviceInfo[]) {\r\n    if (this.state.isLoading) {\r\n      return <div>LOADING</div>;\r\n    } else if (!data.length) {\r\n      return <div>Không có dữ liệu</div>;\r\n    }\r\n  }\r\n\r\n  async fetchDeviceList() {\r\n    this.setState({ isLoading: true });\r\n\r\n    const result = await deviceFetcher.getDeviceList();\r\n    // console.log(result.data);\r\n    this.setState({ isLoading: false }, () => {\r\n      updateDeviceList(result.data);\r\n    });\r\n    // this.setState({ isLoading: false });\r\n    // updateDeviceList(result.data ? result.data : []);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: STATE_TYPE, ownProp) => {\r\n  return {\r\n    deviceList: state.device.deviceList\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Component);\r\n","/**\r\n * @flow\r\n */\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchInput from \"../../search/SearchInput\";\r\nimport TableDevices from \"../DeviceList/TableDevices\";\r\nimport * as deviceFetcher from \"../../../fetcher/device\";\r\nimport { updateDeviceList } from \"../../../actionCreator/device\";\r\nimport { connect } from \"react-redux\";\r\ntype Props = {};\r\ntype States = { searchTerm: string, isLoading: boolean };\r\n\r\nclass Component extends React.PureComponent<Props, States> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { searchTerm: \"\", isLoading: false };\r\n  }\r\n  // componentDidMount() {\r\n  //   this.initData();\r\n  // }\r\n\r\n  // initData = async (loading : boolean) => {\r\n  //   const { id } = this.props;\r\n  //    if (id) {\r\n  //     this.setState({ isLoading: true });\r\n  //     const result = await deviceFetcher.getDeviceListbyOwnwerId(id);\r\n  //     const allData = result;\r\n  //     console.log('da vao ham ! ');\r\n  //     this.setState({ isLoading: false });\r\n  //     updateDeviceList(allData ? allData : []);\r\n  //   } else {\r\n  //     console.log('da vao else ! ')\r\n  //     this.setState({ isLoading: false });\r\n  //   }\r\n  // };\r\n\r\n  render() {\r\n    const { searchTerm, isLoading } = this.state;\r\n    return (\r\n      <div className=\"\" style={{}}>\r\n        <SearchInput\r\n          onChange={this.onChange}\r\n          onSubmit={this.onSubmit}\r\n          value={searchTerm}\r\n        >\r\n          Tìm kiếm\r\n        </SearchInput>\r\n        {/* <Link\r\n          className=\"btn btn-sm btn-primary\"\r\n          to={\"/device/add/\"}\r\n          style={{ margin: 5 }}\r\n        >\r\n          Thêm thiết bị\r\n        </Link>\r\n        <Link\r\n          className=\"btn btn-sm btn-primary\"\r\n          to={\"/device/addMany/\"}\r\n          style={{ margin: 5 }}\r\n        >\r\n          Thêm nhiều thiết bị\r\n        </Link> */}\r\n        <TableDevices forceLoading={isLoading} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onChange = (event: any) => {\r\n    this.setState({ searchTerm: event.target.value });\r\n  };\r\n\r\n  onSubmit = async (event: any) => {\r\n    event.preventDefault();\r\n    this.setState({ isLoading: true });\r\n    let { searchTerm } = this.state;\r\n    searchTerm = searchTerm.trim();\r\n\r\n    let deviceId;\r\n    if (searchTerm) {\r\n      deviceId = searchTerm.split(\"-\");\r\n      deviceId = deviceId.map(value => {\r\n        let str;\r\n        if (value.length === 1) {\r\n          str = `0x0${value}`;\r\n        } else {\r\n          str = `0x${value}`;\r\n        }\r\n        return parseInt(str);\r\n      });\r\n    } else {\r\n      deviceId = [];\r\n    }\r\n    const result = await deviceFetcher.getDeviceListByDeviceId(deviceId);\r\n    this.setState({ isLoading: false });\r\n    updateDeviceList(result.data ? result.data : []);\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: STATE_TYPE, ownProps: Object) => {\r\n  const devices = state.device.deviceList;\r\n  const id = ownProps.match.params.id;\r\n\r\n  for (let index in devices) {\r\n    if (devices[index]._id === id) {\r\n      return { device: devices[index] };\r\n    }\r\n  }\r\n  return {id :id};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Component);","/**\r\n * @flow\r\n */\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { type STATE_TYPE } from \"../../../store\";\r\nimport { type DeviceInfo } from \"../types\";\r\n\r\nimport { dateToString, deviceIdToString, versionToString, stringToDeviceId, typeDevice } from \"./shareFunc\";\r\nimport * as deviceFetcher from \"../../fetcher/device\";\r\nimport { alertConfirm } from \"../../../common/shareFunc\";\r\nimport WebLoading from \"../../../common/components/WebLoading\";\r\n\r\ntype Props = { device: DeviceInfo, id: string };\r\ntype States = {\r\n  isLoading: boolean,\r\n  deviceFromState: DeviceInfo | null,\r\n};\r\n\r\nclass Component extends React.PureComponent<Props, States> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      deviceFromState: null,\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.initData();\r\n  }\r\n\r\n  initData = async (reload: boolean) => {\r\n    const { device, id } = this.props;\r\n    if (reload || !device) {\r\n      const result = await deviceFetcher.getDeviceListbyOwnwerId(id);\r\n      const allData = result;\r\n      console.log(result[0]);\r\n      // console.log(allData.data);\r\n      this.setState({\r\n        isLoading: false,\r\n        deviceFromState: result[0],\r\n      });\r\n    } else {\r\n      this.setState({ isLoading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n    if (isLoading) {\r\n      return <WebLoading />;\r\n    }\r\n\r\n    let { device } = this.props;\r\n    const { deviceFromState } = this.state;\r\n    if (!device) {\r\n      const { deviceFromState } = this.state;\r\n      device = deviceFromState;\r\n    }\r\n\r\n    if (device) {\r\n      const {\r\n        deviceId,\r\n        ownerId,\r\n        _id,\r\n        pairKey,\r\n        mobileSim,\r\n        bikeName,\r\n        smartKey,\r\n        deviceType\r\n      } = device;\r\n\r\n      // Có thông tin -> Hiển thị\r\n      return (\r\n        <div>\r\n          {/* Thanh công cụ */}\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <Link to=\"/device\" className=\"btn btn-link mb-2\">\r\n                <i className=\"fas fa-arrow-circle-left\" /> Quay về\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"btn-group float-right\">\r\n                <button className=\"btn btn-danger\" onClick={this.onDelete}>\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* Thông tin người dùng */}\r\n          <div className=\"card\">\r\n            {/* Số điện thoại */}\r\n            <h4 className=\"card-header\">\r\n              Device ID: {deviceIdToString(deviceId)}\r\n            </h4>\r\n            <div className=\"card-body\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  Tên xe (Daily):{\" \"}{bikeName}\r\n                  <h6 className=\"text-danger\"></h6>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  Mã mở khóa xe (Daily):{\" \"}{deviceIdToString(pairKey)}\r\n                  <h6 className=\"text-danger\"></h6>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  Mã mở khẩn cấp:{\" \"}{(smartKey)}\r\n                  <h6 className=\"text-success\"></h6>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  Số Sim:{\" \"}{(mobileSim)}\r\n                  <h6 className=\"text-success\"></h6>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  Loại Device:{\" \"}{typeDevice(deviceType)}\r\n                  <h6 className=\"text-success\"></h6>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <h5 className=\"mb-4\">Thông tin thêm</h5>\r\n              <ul className=\"list-group\">\r\n                <li className=\"list-group-item\">\r\n                  Phiên bản: Demo\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  Active: Full\r\n                </li>\r\n              </ul>\r\n              <hr />\r\n              <Link to={`/user/${ownerId}`} className=\"btn btn-link mb-2\">\r\n                <i className=\"fas fa-user\" /> Xem người dùng\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    // Không có thông tin\r\n    else {\r\n      return <div>Không có thông tin</div>;\r\n    }\r\n  }\r\n\r\n  onDelete = () => {\r\n    alertConfirm(\"Xác nhận xoá\", this.onConfirm);\r\n  };\r\n\r\n  onConfirm = async () => {\r\n    const { device } = this.props;\r\n    await deviceFetcher.deleteDevice(device);\r\n    this.props.history.go(-1);\r\n  };\r\n}\r\nconst mapStateToProps = (state: STATE_TYPE, ownProps: Object) => {\r\n  const devices = state.device.deviceList;\r\n  const id = ownProps.match.params.id;\r\n\r\n  for (let index in devices) {\r\n    if (devices[index]._id === id) {\r\n      return { device: devices[index] };\r\n    }\r\n  }\r\n  return {id :id};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Component);\r\n","/**\r\n * @flow\r\n */\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { type STATE_TYPE } from \"../../../store\";\r\nimport { type DeviceInfo } from \"../types\";\r\n\r\nimport { alertConfirm } from \"../../../common/shareFunc\";\r\n\r\nimport {\r\n  dateToString,\r\n  stringToDate,\r\n  versionToString,\r\n  deviceIdToString,\r\n  stringToDeviceId,\r\n  stringToVersion\r\n} from \"./shareFunc\";\r\nimport * as deviceFetcher from \"../../fetcher/device\";\r\n\r\ntype Props = { device: DeviceInfo, history: any };\r\ntype States = {\r\n  _id: string,\r\n  deviceIdStr: string,\r\n  owner: string,\r\n  versionStr: string, // Version của code\r\n  firstConnectStr: string, // thời gian kết nối lần đầu (liên quan đến thông tin bảo hành)\r\n  licenseTime: string, // Thời gian sử dụng cho tài khoản sau khi kết nối\r\n  manufactureInfo: string,\r\n  isLoading: boolean\r\n};\r\n\r\nclass Edit extends React.PureComponent<Props, States> {\r\n  constructor(props) {\r\n    super(props);\r\n    const { device } = this.props;\r\n\r\n    const {\r\n      _id,\r\n      deviceId,\r\n      owner,\r\n      firstConnect,\r\n      licenseTime,\r\n      manufactureInfo,\r\n      version\r\n    } = device;\r\n\r\n    this.state = {\r\n      _id: _id,\r\n      deviceIdStr: deviceId\r\n        ? deviceIdToString(deviceId)\r\n        : deviceIdToString([0, 0, 0, 0, 0, 0, 0, 0]),\r\n      owner: owner || \"\",\r\n      versionStr: version ? versionToString(version) : \"1.0.0\",\r\n      firstConnectStr: firstConnect\r\n        ? dateToString(firstConnect)\r\n        : dateToString(Date.now()), // thời gian kết nối lần đầu (liên quan đến thông tin bảo hành)\r\n      licenseTime: licenseTime.toString() || \"365\", // Thời gian sử dụng cho tài khoản sau khi kết nối\r\n      manufactureInfo: manufactureInfo || \"\",\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    alertConfirm(\"Xác nhận\", this.onConfirm);\r\n  };\r\n    // _id: string,\r\n    // deviceId: Number[],\r\n    // pairKey: Number[],\r\n    // ownerId: string,\r\n    // mobileSim: String;\r\n    // bikeName: String;\r\n    // smartKey: String;\r\n    // deviceType: Number;\r\n  onConfirm = () => {\r\n    let {\r\n      _id,\r\n      deviceIdStr,\r\n      pairKey,\r\n      ownerId,\r\n      mobileSim,\r\n      bikeName,\r\n      smartKey,\r\n      deviceType\r\n    } = this.state;\r\n\r\n    const deviceId = stringToDeviceId(deviceIdStr);\r\n    if (!deviceId) {\r\n      alert(\"Định dạng device ID không hợp lệ\");\r\n      return;\r\n    }\r\n    // const firstConnect = stringToDate(firstConnectStr);\r\n    // if (!firstConnect) {\r\n    //   alert(\"Định dạng ngày kích hoạt không hợp lệ\");\r\n    //   return;\r\n    // }\r\n\r\n    // if (!/\\d/.test(licenseTime)) {\r\n    //   alert(\"Định dạng thời hạn bản quyền không hợp lệ\");\r\n    //   return;\r\n    // }\r\n\r\n    // const version = stringToVersion(versionStr);\r\n    // if (!version) {\r\n    //   alert(\"Phiên bản không hợp lệ\");\r\n    //   return;\r\n    // }\r\n\r\n\r\n    let device: DeviceInfo = {\r\n      _id: _id,\r\n      ownerId: ownerId,\r\n      deviceId: deviceId,\r\n      pairKey: pairKey,\r\n      mobileSim:mobileSim,\r\n      bikeName:bikeName,\r\n      smartKey:smartKey,\r\n      deviceType:deviceType\r\n    };\r\n    // Push to Server\r\n    this.setState({ isLoading: true }, async () => {\r\n      await deviceFetcher.editDevice(device);\r\n\r\n      // editUser(user);\r\n      // FIXME: DeviceList load lại devices từ server r đẩy vào redux\r\n      this.props.history.push(\"/device\");\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      _id,\r\n      deviceIdStr,\r\n      pairKey,\r\n      ownerId,\r\n      mobileSim,\r\n      bikeName,\r\n      smartKey,\r\n      deviceType,\r\n      \r\n    } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <Link to={`/user/${_id}`} className=\"btn btn-link mb-2\">\r\n              <i className=\"fas fa-arrow-circle-left\" /> Quay về\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">Sửa thông tin</div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmit}>\r\n              <div className=\"form-group\">\r\n                <div className=\"card-title\">Device ID</div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"deviceIdStr\"\r\n                  required\r\n                  onChange={this.onChange}\r\n                  value={deviceIdStr}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"card-title\">Ngày kích hoạt</div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"firstConnectStr\"\r\n                  required\r\n                  onChange={this.onChange}\r\n                  value={pairKey}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"card-title\">Thời hạn bản quyền</div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"licenseTime\"\r\n                  required\r\n                  onChange={this.onChange}\r\n                  value={mobileSim}\r\n                />\r\n              </div>\r\n              <hr />\r\n              {/*  */}\r\n              <h5 className=\"mb-4\">Thông tin sản xuất</h5>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-2\">\r\n                  <div className=\"card-title\">Mã sản xuất</div>\r\n                </div>\r\n                <div className=\"form-group col-md-10\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"manufactureInfo\"\r\n                    required\r\n                    onChange={this.onChange}\r\n                    value={smartKey}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-2\">\r\n                  <div className=\"card-title\">Phiên bản</div>\r\n                </div>\r\n                <div className=\"form-group col-md-10\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"versionStr\"\r\n                    required\r\n                    onChange={this.onChange}\r\n                    value={deviceType}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <button className=\"btn btn-block btn-info\">Submit</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state: STATE_TYPE, ownProps) {\r\n  let devices = state.device.deviceList;\r\n  let device;\r\n  for (let index in devices) {\r\n    if (devices[index]._id === ownProps.match.params.id) {\r\n      device = devices[index];\r\n      break;\r\n    }\r\n  }\r\n  return { device };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Edit);\r\n","/**\r\n * @flow\r\n */\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { alertConfirm } from \"../../../common/shareFunc\";\r\nimport * as deviceFetcher from \"../../fetcher/device\";\r\n// _id: string,\r\n//   deviceId: Number[],\r\n//   pairKey: Number[],\r\n//   ownerId: string,\r\n//   mobileSim: String;\r\n//   bikeName: String;\r\n//   smartKey: String;\r\n//   deviceType: Number;\r\ntype Props = { history: any };\r\ntype States = {\r\n  id: string,\r\n  pairKey: string,\r\n  manufactureId: string,\r\n  version: string,\r\n\r\n  isLoading: boolean\r\n};\r\n\r\nclass Component extends React.PureComponent<Props, States> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      licenseTime: \"730\",\r\n      manufactureId: \"\",\r\n      version: \"2.0.0\",\r\n\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  confirmSubmit = e => {\r\n    e.preventDefault();\r\n    alertConfirm(\"Xác nhận\", this.onSubmit);\r\n  };\r\n\r\n  onSubmit = () => {\r\n    const {\r\n      id: idStr,\r\n      licenseTime: licenceTimeStr,\r\n      manufactureId,\r\n      version: versionStr\r\n    } = this.state;\r\n\r\n    let idInvalid = false;\r\n    let deviceId;\r\n    if (idStr.trim()) {\r\n      deviceId = idStr.split(\"-\").map(value => {\r\n        let str;\r\n        if (value.length === 1) {\r\n          str = `0x0${value}`;\r\n        } else {\r\n          str = `0x${value}`;\r\n        }\r\n        let num = parseInt(str);\r\n        if (num === NaN) {\r\n          idInvalid = true;\r\n        }\r\n        return num;\r\n      });\r\n      if (deviceId.length !== 8) {\r\n        idInvalid = true;\r\n      }\r\n    } else {\r\n      idInvalid = true;\r\n    }\r\n\r\n    if (idInvalid) {\r\n      alert(\"Định dạng ID không hợp lệ (8 byte)\");\r\n      return;\r\n    }\r\n\r\n    let versionInValid = false;\r\n    let version;\r\n    if (versionStr.trim()) {\r\n      version = versionStr.split(\".\").map(value => {\r\n        let str;\r\n        if (value.length === 1) {\r\n          str = `0x0${value}`;\r\n        } else {\r\n          str = `0x${value}`;\r\n        }\r\n        let num = parseInt(str);\r\n        if (isNaN(num)) {\r\n          versionInValid = true;\r\n        }\r\n        return num;\r\n      });\r\n      if (version.length !== 3) {\r\n        versionInValid = true;\r\n      }\r\n    } else {\r\n      versionInValid = true;\r\n    }\r\n\r\n    if (versionInValid) {\r\n      alert(\"Định dạng version không hợp lệ (XX.XX.XX)\");\r\n      return;\r\n    }\r\n\r\n    if (isNaN(licenceTimeStr)) {\r\n      alert(\"Định dạng ngày hết hạn bản quyền khoản không hợp lệ\");\r\n      return;\r\n    }\r\n    const licenseTime = Number(licenceTimeStr);\r\n\r\n    const device = {\r\n      deviceId,\r\n      licenseTime,\r\n      manufactureId,\r\n      version\r\n    };\r\n    // Push to Server\r\n    this.setState({ isLoading: true }, async () => {\r\n      // const res = await deviceFetcher.addDevice(device);\r\n      // if (res.error) {\r\n      //   alert(`Thêm không thành công: ${res.error}`);\r\n      // } else {\r\n      //   alert(`Thêm thành công`);\r\n      // }\r\n    });\r\n  };\r\n\r\n  onChange = (e: any) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { id, licenseTime, manufactureId, version } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <Link to=\"/device\" className=\"btn btn-link mb-2\">\r\n              <i className=\"fas fa-arrow-circle-left\" /> Quay lại\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">Thêm thiết bị</div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={this.confirmSubmit}>\r\n              <div className=\"form-group\">\r\n                <div className=\"card-title\">Device ID</div>\r\n                <input\r\n                  placeholder=\"00-00-00-00-00-00-00-00\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"id\"\r\n                  required\r\n                  onChange={this.onChange}\r\n                  value={id}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"card-title\">Hạn bản quyền (ngày)</div>\r\n                <input\r\n                  placeholder=\"730\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"licenseTime\"\r\n                  required\r\n                  onChange={this.onChange}\r\n                  value={licenseTime}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"card-title\">Phiên bản</div>\r\n                <input\r\n                  placeholder=\"2.0.0\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"version\"\r\n                  required\r\n                  onChange={this.onChange}\r\n                  value={version}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"card-title\">Mã sản xuất</div>\r\n                <input\r\n                  placeholder=\"100001\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"manufactureId\"\r\n                  required\r\n                  onChange={this.onChange}\r\n                  value={manufactureId}\r\n                />\r\n              </div>\r\n              <hr />\r\n              <button className=\"btn btn-block btn-info\">Submit</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Component;\r\n","/**\r\n * @flow\r\n */\r\nimport { SERVER_IP, to } from \"../../../../configs/fetcher\";\r\nimport Axios from \"axios\";\r\nimport { authHeader } from '../../../../configs/auth-header';\r\nconst getOverview = () => {\r\n  // let user = JSON.parse(localStorage.getItem('user'));\r\n  // console.log(user.token);\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    headers: authHeader()\r\n};\r\nreturn fetch(`http://103.137.185.94:3000/user/overview`,requestOptions).then(handleResponseFetch);\r\n};\r\nfunction handleResponseFetch(response) {\r\n  return response.text().then(text => {\r\n      const data = text && JSON.parse(text);\r\n      return data;\r\n  });\r\n}\r\n\r\nexport { getOverview };\r\n","/**\r\n * @flow\r\n */\r\nimport React from \"react\";\r\nimport WebLoading from \"../../../common/components/WebLoading\";\r\nimport { getOverview } from \"../../fetcher/statistics\";\r\n\r\ntype Props = {};\r\ntype States = {\r\n  isLoading: boolean,\r\n  totalDevice: number,\r\n  totalUser: number,\r\n  activedDevice: number\r\n};\r\n\r\nclass Component extends React.PureComponent<Props, States> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      totalDevice: 0,\r\n      totalUser: 0,\r\n      activedDevice: 0\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let overview = await getOverview();\r\n    this.setState({\r\n      isLoading: false,\r\n       totalDevice: overview.totalDevice,\r\n       totalUser: overview.totalUser,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n    if (isLoading) {\r\n      return <WebLoading />;\r\n    }\r\n    const { totalDevice, totalUser, activedDevice } = this.state;\r\n    return (\r\n      <table class=\"table\">\r\n        <thead class=\"thead-reverse\" />\r\n        <tbody>\r\n          <tr>\r\n            <td>Tổng thiết bị</td>\r\n            <td>{totalDevice}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Đã kích hoạt</td>\r\n            <td>{activedDevice}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Chưa kích hoạt</td>\r\n            <td>{totalDevice - activedDevice}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Tổng số tài khoản</td>\r\n            <td>{totalUser}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Component;\r\n","/**\r\n * @flow\r\n */\r\nimport React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport UserList from \"../components/user/UserList\";\r\nimport UserDetail from \"../components/user/UserDetail\";\r\nimport UserEdit from \"../components/user/UserEdit\";\r\nimport UserAdd from \"../components/user/UserAdd\";\r\nimport DeviceListOwner from \"../components/device/DeviceListOwner\";\r\nimport DeviceList from \"../components/device/DeviceList\";\r\nimport DeviceDetail from \"../components/device/DeviceDetail\";\r\nimport DeviceEdit from \"../components/device/DeviceEdit\";\r\nimport DeviceAdd from \"../components/device/DeviceAdd\";\r\nimport DeviceAddMany from \"../components/device/DeviceAddMany\";\r\n\r\nimport Statistics from \"../components/statistics\";\r\n\r\n// import MissBike from \"../components/missBike/List\";\r\n\r\n// import BikeList from \"../components/bike/BikeList\";\r\n// import BikeEdit from \"../components/bike/BikeEdit\";\r\n\r\n// import MissBikeVer2 from \"../components/missBikeVer2/List\";\r\n\r\nclass Component extends React.PureComponent<{}, {}> {\r\n  render() {\r\n    return (\r\n      <div className=\"container\" style={{}}>\r\n        <Route exact path=\"/\" component={Statistics} />\r\n\r\n        <Switch>\r\n          <Route exact path=\"/user\" component={UserList} />\r\n          <Route exact path=\"/user/add/\" component={UserAdd} />\r\n          <Route exact path=\"/user/:id\" component={UserDetail} /> \r\n          <Route exact path=\"/user/:id/edit\" component={UserEdit} />\r\n\r\n          <Route exact path=\"/device/owner/:id\" component={DeviceListOwner} />\r\n          <Route exact path=\"/device\" component={DeviceList} />\r\n          <Route exact path=\"/device/:id\" component={DeviceDetail} />\r\n          <Route exact path=\"/device/add/\" component={DeviceAdd} />\r\n          <Route exact path=\"/device/:id/edit\" component={DeviceEdit} />\r\n          \r\n          {/* \r\n         \r\n          \r\n\r\n       \r\n          {/* \r\n          <Route exact path=\"/device/addMany/\" component={DeviceAddMany} />\r\n         \r\n          \r\n\r\n          <Route exact path=\"/missbike\" component={MissBike} />\r\n          <Route exact path=\"/missbikeVer2\" component={MissBikeVer2} />\r\n\r\n          <Route exact path=\"/bike\" component={BikeList} />\r\n          <Route exact path=\"/bike/:action/:id?\" component={BikeEdit} />\r\n          <Route exact path=\"/bike/add/\" component={BikeEdit} /> */}\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Component;\r\n","/**\r\n * @flow\r\n */\r\nimport React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport NavBar from \"./components/navbar/NavBar\";\r\nimport DashboardRoute from \"./route\";\r\n\r\ntype Props = {};\r\ntype States = {};\r\n\r\nclass Dashboard extends React.PureComponent<Props, States> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"\">\r\n        <Route component={NavBar} />\r\n        <Route component={DashboardRoute} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","/**\r\n * @flow\r\n */\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Route,\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Switch,\r\n  withRouter\r\n} from \"react-router-dom\";\r\n\r\nimport SignIn from \"../../signin\";\r\nimport Dashboard from \"../../dashboard\";\r\nimport { type STATE_TYPE } from \"../../store/rootReducer\";\r\n\r\nclass RedirectToSignin extends React.PureComponent<{ location: Object }, {}> {\r\n  render() {\r\n    const { location } = this.props;\r\n    if (location.pathname !== \"/signin\") {\r\n      return <Redirect to=\"/signin\" />;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nconst RTSwithRouter = withRouter(RedirectToSignin);\r\n\r\nclass RootRouter extends React.PureComponent<{ isLogined: boolean }, {}> {\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    const { isLogined } = this.props;\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Route render={this.renderRedirectToSignin.bind(this)} />\r\n          <Switch>\r\n            <Route exact path=\"/signin\" component={SignIn} />\r\n            <Route path=\"/\" component={Dashboard} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n\r\n  renderRedirectToSignin() {\r\n    const { isLogined } = this.props;\r\n    if (!isLogined) {\r\n      return <RTSwithRouter />;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProp = (state: STATE_TYPE) => {\r\n  return {\r\n    isLogined: state.auth.isLogined\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProp)(RootRouter);\r\n","/**\r\n * @flow\r\n */\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport store from \"./bundles/store\";\r\nimport RootRouter from \"./bundles/common/routes\";\r\nimport \"./App.css\";\r\nimport WebLoading from \"./bundles/common/components/WebLoading\";\r\nimport { checkAuthSession } from \"./bundles/auth\";\r\nimport Axios from \"axios\";\r\n\r\ntype States = {\r\n  isLoading: boolean\r\n};\r\n\r\nclass App extends React.PureComponent<{}, States> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { isLoading: true };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    document.title = \"SMART KEY\";\r\n    Axios.defaults.withCredentials = true;\r\n    const isLogined = await checkAuthSession();\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n    if (isLoading) {\r\n      return <WebLoading />;\r\n    } else {\r\n      return (\r\n        <Provider store={store}>\r\n          <RootRouter />\r\n        </Provider>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (module.hot) {\n  module.hot.accept();\n}\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}